
set hive.cli.print.header=true;
set hive.resultset.use.unique.column.names=false;
set hive.cli.print.current.db=true;

SELECT * FROM MOVIES LIMIT 10;
DESCRIBE MOVIES;
SELECT * FROM USERS LIMIT 10;
DESCRIBE USERS;
SELECT * FROM RATINGS LIMIT 10;
DESCRIBE RATINGS;

SELECT RATINGS.MOVIEID,AVG(RATING) AVGRATING
FROM RATINGS INNER JOIN MOVIES ON MOVIES.MOVIEID=RATINGS.MOVIEID
WHERE (INSTR(MOVIES.GENRES,"Action")>0)
GROUP BY RATINGS.MOVIEID
ORDER BY AVGRATING DESC
LIMIT 10;

SELECT MOVIES.MOVIEID, MOVIES.TITLE, MOVIES.GENRES, AVG(RATINGS.RATING) AS AVGRATINGS
FROM USERS JOIN RATINGS ON USERS.USERID = RATINGS.USERID
JOIN MOVIES ON MOVIES.MOVIEID = RATINGS.MOVIEID
WHERE USERS.GENDER = "M" AND (INSTR(MOVIES.GENRES,"Action")>0 OR INSTR(MOVIES.GENRES,"Drama")>0)
GROUP BY MOVIES.MOVIEID,MOVIES.TITLE,MOVIES.GENRES
HAVING  AVG(RATING)  >= 4.4 AND  AVG(RATING)  <= 4.7;

------------------------------------ CREATE MOVIES_PARTITIONED-------------------------------------------------

DROP TABLE IF EXISTS MOVIES_PARTITIONED;
CREATE TABLE IF NOT EXISTS
MOVIES_PARTITIONED(MOVIEID STRING,TITLE STRING,GENRES STRING)PARTITIONED BY (YEARRATING INT)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY '::'
LINES TERMINATED BY '\n'
STORED AS TEXTFILE ;
set hive.exec.dynamic.partition.mode=nonstrict
------------------------------------ INSERT TO MOVIES_PARTITIONED-------------------------------------------------
INSERT INTO MOVIES_PARTITIONED
PARTITION (YEARRATING = 2000)
SELECT RATINGS.MOVIEID, MOVIES.TITLE, MOVIES.GENRES
FROM RATINGS INNER JOIN MOVIES ON RATINGS.MOVIEID = MOVIES.MOVIEID
WHERE FROM_UNIXTIME(TIMESRATING,'YYYY') = 2000;

INSERT INTO MOVIES_PARTITIONED
PARTITION (YEARRATING = 2001)
SELECT RATINGS.MOVIEID, MOVIES.TITLE, MOVIES.GENRES
FROM RATINGS INNER JOIN MOVIES ON RATINGS.MOVIEID = MOVIES.MOVIEID
WHERE FROM_UNIXTIME(TIMESRATING,'YYYY') = 2001;


INSERT INTO MOVIES_PARTITIONED
PARTITION (YEARRATING = 2002)
SELECT RATINGS.MOVIEID, MOVIES.TITLE, MOVIES.GENRES
FROM RATINGS INNER JOIN MOVIES ON RATINGS.MOVIEID = MOVIES.MOVIEID
WHERE FROM_UNIXTIME(TIMESRATING,'YYYY') = 2002;



------------------------------------ SELECT FROM PARTITIONED MOVIES_[YEAR]-------------------------------------------------
SELECT * FROM MOVIES_PARTITIONED WHERE YEARRATING=2000 LIMIT 10;
SELECT * FROM MOVIES_PARTITIONED WHERE YEARRATING=2001 LIMIT 10;
SELECT * FROM MOVIES_PARTITIONED WHERE YEARRATING=2002 LIMIT 10;




DROP TABLE IF EXISTS MOVIES_YEAR_2009;
CREATE TABLE MOVIES_YEAR_2009 (MOVIE_ID STRING,MOVIE_NAME STRING,GENRES STRING) ROW FORMAT DELIMITED FIELDS TERMINATED BY '\;';

DROP TABLE IF EXISTS MOVIES_YEAR_2010;
CREATE TABLE MOVIES_YEAR_2010 (MOVIE_ID STRING,MOVIE_NAME STRING,GENRES STRING) ROW FORMAT DELIMITED FIELDS TERMINATED BY '\;';

DROP TABLE IF EXISTS MOVIES_YEAR_2011;
CREATE TABLE MOVIES_YEAR_2011 (MOVIE_ID STRING,MOVIE_NAME STRING,GENRES STRING) ROW FORMAT DELIMITED FIELDS TERMINATED BY '\;';

FROM MOVIES_PARTITIONED
INSERT OVERWRITE TABLE MOVIES_YEAR_2009 SELECT MOVIES_PARTITIONED.MOVIE_ID, MOVIES_PARTITIONED.TITLES, MOVIES_PARTITIONED.GENRES WHERE MOVIES_PARTITIONED.YEAR = 2009
INSERT OVERWRITE TABLE MOVIES_YEAR_2010 SELECT MOVIES_PARTITIONED.MOVIE_ID, MOVIES_PARTITIONED.TITLES, MOVIES_PARTITIONED.GENRES WHERE MOVIES_PARTITIONED.YEAR = 2010
INSERT OVERWRITE TABLE MOVIES_YEAR_2011 SELECT MOVIES_PARTITIONED.MOVIE_ID, MOVIES_PARTITIONED.TITLES, MOVIES_PARTITIONED.GENRES WHERE MOVIES_PARTITIONED.YEAR = 2011;




CREATE TABLE IF NOT EXISTS
PARTITIONED_CITY(Name STRING, AccentCity
STRING, Region STRING, Population INT,
Latitude FLOAT, Longitude FLOAT)
PARTITIONED BY (Country_Code STRING)
ROW FORMAT DELIMITED
FIELDS TERMINATED BY ','
LINES TERMINATED BY '\n'
STORED AS TEXTFILE ;